version: '3.8'

services:
  app:
    build: ./app  # предполагается, что Dockerfile находится в папке ./app
    #env_file: 
    #  - ./app.env  # файл с переменными окружения
    volumes:
      - ./app:/app  # монтирование исходных файлов
    depends_on:
      - database
      - rabbitmq
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  web-proxy:
    image: nginx:latest
    volumes: 
    - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - backend
      - frontend

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"  # порт для AMQP
      - "15672:15672"  # порт для веб-интерфейса
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: on-failure  # перезагружаться при сбоях
    networks:
      - backend

  ml_worker:
    build: ./app
    command: python -m services.ml_worker
    volumes:
      - ./app:/app
    depends_on:
      - rabbitmq
      - database
    networks:
      - backend
    deploy:
      replicas: 3

  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

volumes:
  rabbitmq_data:
    driver: local
  pg_data:
    driver: local

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge